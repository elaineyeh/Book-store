CREATE TABLE IF NOT EXISTS "user"(
       id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
       name varchar(32),       -- For hash encrypt
       password varchar(128),   -- For sha512
       email varchar(32),
       address varchar(128),
       phone varchar(32)
);

CREATE TABLE IF NOT EXISTS category(
       id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
       name varchar(32)
);

CREATE TABLE IF NOT EXISTS publisher(
       id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
       name varchar(32),
       address varchar(128),
       phone varchar(32)
);

CREATE TABLE IF NOT EXISTS author(
       id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
       name varchar(32)
);
-- SELECT * FROM book_authors WHERE book=1;
CREATE TABLE IF NOT EXISTS book(
       id varchar(13) PRIMARY KEY, -- Support ISBN 13
       category int REFERENCES category(id), -- ISBN 
       title varchar(64),
       publisher int REFERENCES publisher(id),
       price numeric CHECK (price > 0),
       descript text,
       image text
);

CREATE TABLE IF NOT EXISTS tag(
       id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
       name varchar(20)
);

CREATE TABLE IF NOT EXISTS book_authors(
       book varchar(13) REFERENCES book(id),
       author int REFERENCES author(id),
       PRIMARY KEY (book, author)
);

CREATE TABLE IF NOT EXISTS book_tags(
       book varchar(13) REFERENCES book(id),
       tag int REFERENCES tag(id),
       PRIMARY KEY (book, tag)
);

CREATE TABLE IF NOT EXISTS orders(
       id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
       buyer int REFERENCES "user"(id),
       buy_time timestamp,
       paid_time timestamp,
       paid boolean,
       ship boolean
);

CREATE TABLE IF NOT EXISTS orders_detail(
       order_id int REFERENCES orders(id),
       book varchar(13) REFERENCES book(id),
       "count" integer CHECK ("count" > 0),
       PRIMARY KEY (order_id, book)
);
